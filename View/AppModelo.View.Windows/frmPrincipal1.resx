<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>54</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAAYBQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAlw
        SFlzAAALEwAACxMBAJqcGAAABMpJREFUeJzt3NGJw0AUBEEFsmk5/1DuzigFQ588VaAAWgzvc68LAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD4H87f93rId/Tr57PeP/bnId9Lv34+
        a30A+vsuByC0PgD9fZcDEFofgP6+ywEIrQ9Af9/lAITWB6C/73IAQusD0N93OQCh9QHo77scgND6APT3
        XQ5AaH0A+vsuByC0PgD9fZcDEFofgP6+ywEIrQ9Af9/lAITWB6C/73IAQusD0N93OQCh9QHo77scgND6
        APT3XQ5AaH0A+vsuByC0PgD9fZcDEFofgP6+ywEIrQ9Af9/lAITWB6C/73IAQusD0N93OQCh9QHo77sc
        gND6APT3XQ5AaH0A+vsuByC0PgD9fZcDEFofgP6+ywEIrQ9Af9/lAITWB6C/73IAQusD0N93OQCh9QHo
        77scgND6APT3XQ5AaH0A+vsuByC0PgD9fZcDEFofgP6+ywEIrQ9Af9/lAITWB6C/73IAQusD0N93OQCh
        9QHo77scgND6APT3XQ5AaH0A+vsuByB0rvvHPuE7+vUDAAAAAAAAAAAAAAAAAAAAAAAAAHyD9Uch9fdd
        HgUNvX9s/dyzZ7H1exY8sj4A/X2XAxBaH4D+vssBCK0PQH/f5QCE1gegv+9yAELrA9DfdzkAofUB6O+7
        HIDQ+gD0910OQGh9APr7LgcgtD4A/X2XAxBaH4D+vssBCK0PQH/f5QCE1gegv+9yAELrA9DfdzkAofUB
        6O+7HIDQ+gD0910OQGh9APr7LgcgtD4A/X2XAxBaH4D+vssBCK0PQH/f5QCE1gegv+9yAELrA9DfdzkA
        ofUB6O+7HIDQ+gD0910OQGh9APr7LgcgtD4A/X2XAxBaH4D+vssBCK0PQH/f5QCE1gegv+9yAELrA9Df
        dzkAofUB6O+7HIDQ+gD0910OQGh9APr7LgcgtD4A/X2XAxBaH4D+vssBCK0PQH/f5QCE1gegv+9yAELr
        A9DfdzkAofUB6O+7HIDQ+gD0910OQGh9APr7LgcgtD4A/X2XAxA61/1jn/Ad/foBAAAAAAAAAAAAAAAA
        AAAAAAAAAL7B+qOQ+vsuj4KG3j+2fu7Zs9j6PQseWR+A/r7LAQitD0B/3+UAhNYHoL/vcgBC6wPQ33c5
        AKH1AejvuxyA0PoA9PddDkBofQD6+y4HILQ+AP19lwMQWh+A/r7LAQitD0B/3+UAhNYHoL/vcgBC6wPQ
        33c5AKH1AejvuxyA0PoA9PddDkBofQD6+y4HILQ+AP19lwMQWh+A/r7LAQitD0B/3+UAhNYHoL/vcgBC
        6wPQ33c5AKH1AejvuxyA0PoA9PddDkBofQD6+y4HILQ+AP19lwMQWh+A/r7LAQitD0B/3+UAhNYHoL/v
        cgBC6wPQ33c5AKH1AejvuxyA0PoA9PddDkBofQD6+y4HILQ+AP19lwMQWh+A/r7LAQitD0B/3+UAhNYH
        oL/vcgBC6wPQ33c5AKH1AejvuxyA0PoA9PddDkBofQD6+y4HILQ+AP19lwMQWh+A/r7LAQid6/6xT/iO
        fv0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDtFyKbw6YL0qUdAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>